<UserControl
  x:Class="RM_Messenger.View.ChatControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converter="clr-namespace:RM_Messenger.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:database="clr-namespace:RM_Messenger.Database"
  xmlns:helper="clr-namespace:RM_Messenger.Helpers"
  xmlns:local="clr-namespace:RM_Messenger.View"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:RM_Messenger.Model"
  Background="White"
  Loaded="UserControl_Loaded"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <converter:NameConverter x:Key="NameConverter" />
      <converter:FlowDocumentToXamlConverter x:Key="flowDocumentConverter" />
      <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

      <Style x:Key="ButtonHighlight" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border Background="{TemplateBinding Background}">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="DarkGoldenrod" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <!--  Flat Button  -->
      <ControlTemplate x:Key="FlatButtonControlTemplate" TargetType="{x:Type Button}">
        <Border
          x:Name="OuterBorder"
          BorderBrush="Transparent"
          BorderThickness="1"
          CornerRadius="2">
          <Border
            x:Name="InnerBorder"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="2">
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True" />
          </Border>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Yellow" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Green" />
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Yellow" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Green" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!--  Flat Toggle Button  -->
      <ControlTemplate x:Key="FlatToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
        <Border
          x:Name="OuterBorder"
          BorderBrush="Transparent"
          BorderThickness="1"
          CornerRadius="2">
          <Border
            x:Name="InnerBorder"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="2">
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True" />
          </Border>
        </Border>

        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="purple" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="pink" />
            <Setter TargetName="InnerBorder" Property="Background" Value="plum" />
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="purple" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="darkmagenta" />
            <Setter TargetName="InnerBorder" Property="Background" Value="indigo" />
          </Trigger>
          <Trigger Property="IsChecked" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="purple" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="violet" />
            <Setter TargetName="InnerBorder" Property="Background" Value="#945F8D" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid x:Name="GridChat" Margin="7,0,7,7">
    <Grid.RowDefinitions>
      <RowDefinition Height="auto" />
      <RowDefinition Height="auto" />
      <RowDefinition Height="auto" />
      <RowDefinition />
    </Grid.RowDefinitions>
    <DockPanel Margin="0" Cursor="Hand">
      <DockPanel.Background>
        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
          <GradientStop x:Name="DockpanelGradientColor2" Offset="0.19" />
          <GradientStop x:Name="DockpanelGradientColor1" Offset="0.8" />
        </LinearGradientBrush>
      </DockPanel.Background>
      <Menu Background="Transparent" DockPanel.Dock="Top">

        <MenuItem Foreground="White" Header="_Conversation">
          <MenuItem Foreground="Black" Header="_New">
            <MenuItem.Icon>
              <materialDesign:PackIcon Kind="OpenInNew" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Foreground="Black" Header="_Open">
            <MenuItem.Icon>
              <materialDesign:PackIcon Kind="MenuOpen" />
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Foreground="Black" Header="_Save">
            <MenuItem.Icon>
              <materialDesign:PackIcon Kind="ContentSave" />
            </MenuItem.Icon>
          </MenuItem>
          <Separator />
          <MenuItem Foreground="Black" Header="_Exit">
            <MenuItem.Icon>
              <materialDesign:PackIcon Kind="ExitRun" />
            </MenuItem.Icon>
          </MenuItem>
        </MenuItem>

        <MenuItem Foreground="White" Header="_Edit" />
        <MenuItem
          Cursor="Hand"
          Foreground="White"
          Header="_View">
          <MenuItem
            Command="{Binding TextEditorCommand}"
            Cursor="Hand"
            Foreground="Black"
            Header="_Text Editor">
            <MenuItem.Icon>
              <materialDesign:PackIcon Kind="Abc" />
            </MenuItem.Icon>
          </MenuItem>
        </MenuItem>
        <MenuItem Foreground="White" Header="_Actions" />
        <MenuItem Foreground="White" Header="_Help" />
      </Menu>
    </DockPanel>

    <DockPanel Grid.Row="1" Margin="0,5">
      <Button
        Background="Transparent"
        BorderThickness="0"
        Cursor="Hand"
        ToolTip="Video Call">
        <Button.Template>
          <ControlTemplate TargetType="{x:Type Button}">
            <StackPanel>
              <Image
                x:Name="VideoCallImage"
                Width="30"
                Height="30"
                HorizontalAlignment="Center"
                Source="pack://application:,,,/RM_Messenger;component/Resources/VideoCall.png" />
              <Label
                Background="Transparent"
                Content="Video Call"
                Foreground="White" />
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter TargetName="VideoCallImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/VideoCall_MouseOver.png" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Button.Template>
      </Button>

      <Button
        HorizontalAlignment="Left"
        Background="Transparent"
        BorderThickness="0"
        Cursor="Hand"
        ToolTip="Voice Call">
        <Button.Template>
          <ControlTemplate TargetType="{x:Type Button}">
            <StackPanel>
              <Image
                x:Name="VoiceCallImage"
                Width="30"
                Height="30"
                HorizontalAlignment="Center"
                Source="pack://application:,,,/RM_Messenger;component/Resources/VoiceCall.png" />
              <Label
                Background="Transparent"
                Content="Voice Call"
                Foreground="White" />
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter TargetName="VoiceCallImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/VoiceCall_MouseOver.png" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Button.Template>
      </Button>

      <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
        <Button
          x:Name="IMVironmentsButton"
          Background="Transparent"
          BorderThickness="0"
          Click="OnForceUpdateClick"
          Cursor="Hand"
          ToolTip="IMVironments">
          <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
              <StackPanel>
                <Image
                  x:Name="IMVironmentsImage"
                  Width="30"
                  Height="30"
                  VerticalAlignment="Bottom"
                  Source="pack://application:,,,/RM_Messenger;component/Resources/IMVironmentsButtonIcon.png" />
                <Label
                  Grid.Row="1"
                  HorizontalContentAlignment="Center"
                  Background="Transparent"
                  Content="IMVironments"
                  Foreground="White" />
              </StackPanel>
              <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                  <Setter TargetName="IMVironmentsImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/IMVironmentsButtonIcon_MouseOver.png" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Button.Template>

        </Button>

        <Button
          x:Name="ActivitiesButton"
          Background="Transparent"
          BorderThickness="0"
          Cursor="Hand"
          ToolTip="Activities">
          <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
              <StackPanel>
                <Image
                  x:Name="ActivitiesImage"
                  Width="30"
                  Height="30"
                  VerticalAlignment="Bottom"
                  Source="pack://application:,,,/RM_Messenger;component/Resources/ActivitiesButtonIcon.png" />
                <Label
                  HorizontalContentAlignment="Center"
                  Background="Transparent"
                  Content="Activities"
                  Foreground="White" />
              </StackPanel>
              <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                  <Setter TargetName="ActivitiesImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/ActivitiesButtonIcon_MouseOver.png" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Button.Template>

        </Button>

        <Button
          x:Name="PhotosButton"
          Background="Transparent"
          BorderThickness="0"
          Cursor="Hand"
          ToolTip="Photos">
          <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
              <StackPanel>
                <Image
                  x:Name="PhotosImage"
                  Width="30"
                  Height="30"
                  VerticalAlignment="Bottom"
                  Source="pack://application:,,,/RM_Messenger;component/Resources/PhotosButtonIcon.png" />
                <Label
                  HorizontalContentAlignment="Center"
                  Background="Transparent"
                  Content="Photos"
                  Foreground="White" />
              </StackPanel>
              <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                  <Setter TargetName="PhotosImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/PhotosButtonIcon_MouseOver.png" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Button.Template>
        </Button>
      </StackPanel>
    </DockPanel>

    <Button
      Grid.Row="2"
      Grid.Column="0"
      Height="12"
      Margin="5,10,0,0"
      HorizontalAlignment="Left"
      Background="Transparent"
      BorderThickness="0"
      Style="{StaticResource MaterialDesignRaisedAccentButton}">

      <StackPanel Margin="-5" Orientation="Horizontal">
        <Image
          Width="10"
          Height="10"
          Margin="-10,0,5,0"
          Source="{Binding DisplayedUser.OnOffImage}" />
        <TextBlock
          x:Name="DisplayedUser_User_ID"
          Margin="0,-9"
          VerticalAlignment="Center"
          FontFamily="Calisto MT"
          FontSize="11"
          Foreground="White"
          Text="{Binding DisplayedUser.UserId}" />
        <Label
          Margin="0,-9"
          VerticalAlignment="Center"
          Content=" - "
          FontFamily="Calisto MT"
          FontSize="11"
          FontWeight="Thin"
          Foreground="White"
          Visibility="{Binding DisplayedUser.Status, Converter={StaticResource NullToVisibilityConverter}}" />
        <TextBlock
          Margin="0,-9"
          VerticalAlignment="Center"
          FontFamily="Calisto MT"
          FontSize="11"
          FontWeight="Thin"
          Foreground="White"
          Text="{Binding DisplayedUser.Status}" />
      </StackPanel>
    </Button>

    <Grid Grid.Row="3" Grid.Column="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="3*" />
        <RowDefinition Height="auto" />
        <RowDefinition Height="auto" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="4*" />
        <ColumnDefinition Width="auto" />
      </Grid.ColumnDefinitions>

      <DockPanel
        Name="DockPanelChat"
        Grid.RowSpan="4"
        Grid.Column="1"
        Margin="0,5,5,5">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
          </Grid.RowDefinitions>
          <StackPanel
            Grid.Row="0"
            VerticalAlignment="Top"
            Background="Transparent"
            Cursor="Hand">
            <Image
              MaxWidth="110"
              MaxHeight="110"
              Source="{Binding ProfilePicture}"
              ToolTip="Profile Picture" />
          </StackPanel>
          <StackPanel Grid.Row="1" />
          <StackPanel
            Grid.Row="2"
            MaxWidth="70"
            MaxHeight="70"
            Margin="20,0"
            VerticalAlignment="Bottom"
            Background="White">
            <Image Source="{Binding PersonalProfilePicture}" />
          </StackPanel>
        </Grid>
      </DockPanel>

      <Button
        Grid.Row="1"
        Margin="10"
        HorizontalContentAlignment="Left"
        Foreground="White">
        <Button.Content>
          <MultiBinding Converter="{StaticResource NameConverter}" ConverterParameter="FormatFirstLast">
            <Binding Path="DisplayedUser.FirstName" />
            <Binding Path="DisplayedUser.LastName" />
          </MultiBinding>
        </Button.Content>
      </Button>


      <Border
        Grid.Row="1"
        Margin="5,5,5,0"
        Background="White"
        BorderBrush="#1E98F7"
        BorderThickness="1,1,1,0">
        <ScrollViewer
          x:Name="AutoScrollViewer"
          helper:AutoScrollHelper.AutoScroll="True"
          PreviewMouseWheel="TS_PreviewMouseWheel"
          VerticalScrollBarVisibility="Auto">
          <ListBox
            Name="MessagesListBox"
            Margin="5,10"
            BorderThickness="0"
            ItemsSource="{Binding MessagesList, Mode=OneWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden">
            <ListBox.Resources>
              <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                      <StackPanel
                        Margin="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                        <local:EmoticonRichTextBoxMessagesControl
                          x:Name="ChatContent"
                          Grid.Row="1"
                          Width="{Binding ElementName=MessagesListBox, Path=ActualWidth}"
                          Document="{Binding Content, Mode=OneTime}"
                          ToolTip="{Binding ToolTip}" />
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </ListBox.Resources>
          </ListBox>
        </ScrollViewer>
      </Border>


      <ListView
        x:Name="UploadedFilesView"
        Grid.Row="2"
        Margin="5,0"
        Background="White"
        BorderBrush="#1E98F7"
        BorderThickness="1,0,1,1"
        ItemsSource="{Binding Path=UploadedFilesList, UpdateSourceTrigger=PropertyChanged}"
        SelectedItem="{Binding SelectedUploadedFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        SelectedValue="{Binding ElementName=UploadedFilesView, Path=DataContext.SelectedUploadedFile}">

        <ListView.ItemContainerStyle>
          <Style TargetType="{x:Type ListViewItem}">
            <EventSetter Event="PreviewGotKeyboardFocus" Handler="SelectCurrentItem" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                  <ContentPresenter />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </ListView.ItemContainerStyle>

        <ListView.ItemTemplate>
          <DataTemplate DataType="{x:Type database:Upload}">
            <Grid Background="AliceBlue" Visibility="{Binding UploadedViewVisibility}">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <DockPanel>
                <TextBlock
                  Grid.Row="0"
                  Margin="12,0,0,0"
                  VerticalAlignment="Center"
                  Cursor="Hand"
                  FontWeight="Bold"
                  Foreground="DarkBlue"
                  Text="{Binding Path=SentBy_User_ID}"
                  TextWrapping="WrapWithOverflow"
                  ToolTip="{Binding File_Name}" />

                <TextBlock
                  Grid.Row="0"
                  Margin="0"
                  VerticalAlignment="Center"
                  Cursor="Hand"
                  TextWrapping="WrapWithOverflow"
                  ToolTip="{Binding File_Name}">

                  <TextBlock.Text>
                    <MultiBinding StringFormat=" sent: &quot;{0}&quot;">
                      <Binding Path="File_Name" />
                    </MultiBinding>
                  </TextBlock.Text>
                </TextBlock>
              </DockPanel>

              <DockPanel Grid.Row="1">
                <Button
                  x:Name="AcceptButton"
                  Height="23"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Bottom"
                  Background="Transparent"
                  BorderThickness="0"
                  Command="{Binding ElementName=UploadedFilesView, Path=DataContext.AcceptUploadCommand}"
                  Content="Accept"
                  FontSize="11"
                  FontWeight="Bold"
                  Foreground="#5C7FAF"
                  Style="{StaticResource MaterialDesignRaisedAccentButton}"
                  ToolTip="Accept" />
                <Button
                  x:Name="SaveAsButton"
                  Height="23"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Bottom"
                  Background="Transparent"
                  BorderThickness="0"
                  Command="{Binding ElementName=UploadedFilesView, Path=DataContext.AcceptUploadCommand}"
                  Content="Save As..."
                  FontSize="11"
                  FontWeight="Bold"
                  Foreground="#5C7FAF"
                  Style="{StaticResource MaterialDesignRaisedAccentButton}"
                  ToolTip="Save As..." />
                <Button
                  x:Name="DeclineButton"
                  Height="23"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center"
                  Background="Transparent"
                  BorderThickness="0"
                  Command="{Binding ElementName=UploadedFilesView, Path=DataContext.CancelUploadCommand}"
                  Content="Decline"
                  FontSize="11"
                  FontWeight="Bold"
                  Foreground="#5C7FAF"
                  Style="{StaticResource MaterialDesignRaisedAccentButton}"
                  ToolTip="Decline" />
              </DockPanel>
              <Button
                x:Name="CloseButton"
                Width="40"
                Height="23"
                Margin="0,0,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Right"
                VerticalContentAlignment="Center"
                Background="Transparent"
                BorderThickness="0"
                Command="{Binding ElementName=UploadedFilesView, Path=DataContext.CancelUploadCommand}"
                Content="x"
                Cursor="Hand"
                FontSize="11"
                FontWeight="Bold"
                Foreground="#5C7FAF"
                Style="{StaticResource MaterialDesignRaisedAccentButton}" />
            </Grid>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>


      <local:ChatTextBoxControl
        x:Name="ChatTextBoxControl"
        Grid.Row="3"
        Margin="5"
        Document="{Binding Path=MessageBoxContent, Converter={StaticResource flowDocumentConverter}, Mode=TwoWay}" />

      <Button
        Name="SendCommandButton"
        Grid.Row="3"
        Width="0"
        Height="0"
        Margin="10,5,5,5"
        Click="OnForceUpdateClick"
        Command="{Binding SendCommand}" />
    </Grid>
  </Grid>
</UserControl>