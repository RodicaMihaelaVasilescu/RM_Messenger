<UserControl
  x:Class="RM_Messenger.View.HomepageControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converter="clr-namespace:RM_Messenger.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:gif="http://wpfanimatedgif.codeplex.com"
  xmlns:helper="clr-namespace:RM_Messenger.Helpers"
  xmlns:local="clr-namespace:RM_Messenger.View"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:RM_Messenger.Model"
  d:DesignHeight="800"
  d:DesignWidth="400"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <converter:NameConverter x:Key="NameConverter" />

      <Style x:Key="RemoveListViewItemHighlight" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListViewItem}">
              <ContentPresenter />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


      <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
      </Style>

      <Style x:Key="TopLeftRoundCorner" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid x:Name="grid">
                <Border
                  x:Name="border"
                  BorderBrush="Black"
                  BorderThickness="1"
                  CornerRadius="10,0,0,0">
                  <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <!--<GradientStop Offset="0" Color="#7B4171" />-->
                      <!--<GradientStop Offset="0.445" Color="#693060" />
                      <GradientStop Offset="0.53" Color="#481041" />-->
                      <GradientStop Offset="0.1" Color="{Binding LightColorGradient}" />
                      <GradientStop Offset="0.4" Color="{Binding DarkColorGradient}" />
                    </LinearGradientBrush>
                  </Border.Background>
                  <ContentPresenter
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    TextElement.FontWeight="Bold" />
                </Border>

              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                      <RadialGradientBrush GradientOrigin="0.496,1.052">
                        <RadialGradientBrush.RelativeTransform>
                          <TransformGroup>
                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
                            <TranslateTransform X="0.02" Y="0.3" />
                          </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Offset="0.3" Color="{Binding LightColorGradient}" />
                        <GradientStop Offset="0.6" Color="{Binding LightColorGradient}" />
                      </RadialGradientBrush>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="#481041" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="grid" Property="Opacity" Value="0.25" />
                </Trigger>

              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


      <Style x:Key="TopRightRoundCorner" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid x:Name="grid">
                <Border
                  x:Name="border"
                  BorderBrush="Black"
                  BorderThickness="1"
                  CornerRadius="0,10,0,0">
                  <Border.Background>
                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                      <RadialGradientBrush.RelativeTransform>
                        <TransformGroup>
                          <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
                          <TranslateTransform X="0.02" Y="0.3" />
                        </TransformGroup>
                      </RadialGradientBrush.RelativeTransform>
                      <GradientStop Offset="1" Color="{Binding DarkColorGradient}" />
                      <GradientStop Offset="0.3" Color="{Binding DarkColorGradient}" />
                    </RadialGradientBrush>
                  </Border.Background>
                  <ContentPresenter
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    TextElement.FontWeight="Bold" />
                </Border>

              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="border" Property="Background">
                    <Setter.Value>
                      <RadialGradientBrush GradientOrigin="0.496,1.052">
                        <RadialGradientBrush.RelativeTransform>
                          <TransformGroup>
                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5" />
                            <TranslateTransform X="0.02" Y="0.3" />
                          </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Offset="0.3" Color="{Binding LightColorGradient}" />
                        <GradientStop Offset="0.6" Color="{Binding LightColorGradient}" />
                      </RadialGradientBrush>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="#481041" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="grid" Property="Opacity" Value="0.25" />
                </Trigger>

              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


    </ResourceDictionary>
  </UserControl.Resources>
  <Grid Margin="7,0,7,7" Background="{Binding BackgroundColor}">
    <Grid Background="{Binding BackgroundColor}">

      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="auto" />
        <RowDefinition Height="auto" />
        <RowDefinition Height="1*" />
        <RowDefinition Height="auto" />
        <RowDefinition Height="auto" />
      </Grid.RowDefinitions>

      <DockPanel Margin="0" Cursor="Hand">

        <DockPanel.Style>
          <Style TargetType="DockPanel">
            <Setter Property="Background">
              <Setter.Value>
                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                  <GradientStop Offset="0.19" Color="{Binding DockpanelGradientColor2}" />
                  <GradientStop Offset="0.8" Color="{Binding DockpanelGradientColor1}" />
                </LinearGradientBrush>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </DockPanel.Style>

        <Menu
          Background="Transparent"
          Cursor="Hand"
          DockPanel.Dock="Top">

          <MenuItem Foreground="White" Header="_Messenger">
            <MenuItem
              Command="{Binding ChangeColorCommand}"
              Foreground="Black"
              Header="_New">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="OpenInNew" />
              </MenuItem.Icon>
            </MenuItem>

            <MenuItem
              Cursor="Hand"
              Foreground="Black"
              Header="_Change Color">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="ColorLens" />
              </MenuItem.Icon>
              <MenuItem Cursor="Hand" Header="_Change Theme">
                <MenuItem.Template>
                  <ControlTemplate>
                    <ListView
                      Cursor="Hand"
                      ItemsSource="{Binding ThemeColors}"
                      MouseUp="ListView_Selected"
                      SelectedItem="{Binding SelectedThemeColor}" />
                  </ControlTemplate>
                </MenuItem.Template>
              </MenuItem>

            </MenuItem>

            <MenuItem
              Cursor="Hand"
              Foreground="Black"
              Header="_Save">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="ContentSave" />
              </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem
              Command="{Binding LogoutCommand}"
              Cursor="Hand"
              Foreground="Black"
              Header="_Sign Out">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="ExitRun" />
              </MenuItem.Icon>
            </MenuItem>
          </MenuItem>

          <MenuItem Foreground="White" Header="_Contacts" />

          <MenuItem Foreground="White" Header="_Actions">
            <MenuItem
              Command="{Binding RefreshCommand}"
              Cursor="Hand"
              Foreground="Black"
              Header="_Refresh">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="Refresh" />
              </MenuItem.Icon>
            </MenuItem>
          </MenuItem>

          <MenuItem Foreground="White" Header="_View">
            <MenuItem
              Command="{Binding TextEditorCommand}"
              Cursor="Hand"
              Foreground="Black"
              Header="_Text Editor">
              <MenuItem.Icon>
                <materialDesign:PackIcon Kind="Abc" />
              </MenuItem.Icon>
            </MenuItem>
          </MenuItem>
        </Menu>

      </DockPanel>

      <Grid Grid.Row="1">
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto" />
          <ColumnDefinition Width="auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button
          x:Name="ProfileImage"
          Grid.RowSpan="3"
          Grid.Column="0"
          Width="60"
          Height="60"
          Margin="10,10,0,0"
          HorizontalAlignment="Left"
          Background="Transparent"
          Cursor="Hand"
          MouseEnter="Button_MouseEnter"
          MouseLeave="Button_MouseLeave"
          ToolTip="Profile Picture">
          <StackPanel Background="White">
            <Image
              x:Name="ProfilePicture"
              Width="55"
              Height="55"
              Source="{Binding ProfilePicture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
          </StackPanel>
        </Button>
        <Popup
          x:Name="ProfilePicturePopupTooltip"
          MouseLeave="Tooltip_MouseLeave"
          Placement="Left"
          PlacementTarget="{Binding ElementName=ProfileImage}">
          <StackPanel>
            <local:ChangeProfilePictureControl x:Name="ChangeProfilePictureControl" />
          </StackPanel>
        </Popup>

        <Button
          Grid.Row="0"
          Grid.Column="1"
          Height="12"
          Margin="5,10,0,0"
          HorizontalAlignment="Left"
          Background="Transparent"
          BorderThickness="0"
          Style="{StaticResource MaterialDesignRaisedAccentButton}">

          <StackPanel Margin="-10" Orientation="Horizontal">
            <Image
              Width="10"
              Height="10"
              Margin="-5,0,0,0"
              VerticalAlignment="Center"
              Source="{Binding OnOffImage}" />
            <TextBlock
              Height="15"
              Margin="5,-5"
              VerticalAlignment="Center"
              FontFamily="Calisto MT"
              FontSize="12"
              Foreground="White"
              Text="{Binding Email}" />
          </StackPanel>
        </Button>

        <TextBox
          Name="StatusTextBox"
          Grid.Row="1"
          Grid.Column="1"
          Grid.ColumnSpan="2"
          Height="19"
          Margin="10,0"
          Padding="10,0"
          HorizontalAlignment="Stretch"
          HorizontalContentAlignment="Left"
          VerticalContentAlignment="Center"
          Panel.ZIndex="0"
          BorderBrush="LightGray"
          BorderThickness="1"
          FontFamily="Calisto MT"
          FontSize="11"
          FontWeight="Thin"
          Foreground="DeepSkyBlue"
          KeyDown="StatusTextBox_KeyDown"
          Text="{Binding Status, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}">
          <TextBox.Style>
            <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" TargetType="TextBox">
              <Style.Resources>
                <VisualBrush
                  x:Key="GrayHelperTextBrush"
                  AlignmentX="Left"
                  AlignmentY="Center"
                  Stretch="None">
                  <VisualBrush.Visual>
                    <Label
                      Name="SearchLabel"
                      Background="Transparent"
                      BorderBrush="LightGray"
                      Content="Share a status message..."
                      FontFamily="Calisto MT"
                      FontSize="11"
                      FontWeight="Thin"
                      Foreground="LightGray" />
                  </VisualBrush.Visual>
                </VisualBrush>

                <VisualBrush
                  x:Key="BlackHelperTextBrush"
                  AlignmentX="Left"
                  AlignmentY="Center"
                  Stretch="None">
                  <VisualBrush.Visual>
                    <Label
                      Name="SearchBlackLabel"
                      Background="Transparent"
                      Content="Share a status message..."
                      FontFamily="Calisto MT"
                      FontSize="11"
                      Foreground="DeepSkyBlue" />
                  </VisualBrush.Visual>
                </VisualBrush>

              </Style.Resources>
              <Style.Triggers>

                <Trigger Property="IsKeyboardFocused" Value="True">
                  <Setter Property="Background" Value="Transparent" />
                </Trigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Null}" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsMouseCaptured" Value="False" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsMouseCaptured" Value="False" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Null}" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                  </MultiTrigger.Setters>
                </MultiTrigger>

              </Style.Triggers>
            </Style>
          </TextBox.Style>
        </TextBox>

        <Button
          x:Name="ChangeStatusButton"
          Grid.Row="1"
          Grid.Column="2"
          Grid.ColumnSpan="1"
          Width="20"
          Height="20"
          Margin="10,0"
          HorizontalAlignment="Right"
          Background="Transparent"
          Command="{Binding ChangeStatusCommand}" />

        <Image
          Grid.Row="2"
          Grid.Column="1"
          Width="10"
          Height="10"
          Margin="5,0,10,0"
          HorizontalAlignment="Left"
          Source="pack://application:,,,/RM_Messenger;component/Resources/Phone.png" />

        <Button
          Grid.Row="2"
          Grid.Column="1"
          Margin="20,0,0,0"
          HorizontalAlignment="Left"
          VerticalAlignment="Center"
          Background="Transparent"
          BorderThickness="0"
          Content="RM! Voice"
          Cursor="Hand"
          FontFamily="Calisto MT"
          FontSize="10"
          Foreground="White">

          <Button.Template>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border>
                <Grid>
                  <ContentPresenter />
                  <Grid
                    x:Name="StatusPanel"
                    Background="Black"
                    Opacity="0" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter TargetName="StatusPanel" Property="Opacity" Value="0.1" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                  <Setter TargetName="StatusPanel" Property="Opacity" Value="0.3" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Button.Template>
        </Button>

        <StackPanel
          Grid.Row="2"
          Grid.Column="3"
          Margin="5,0,5,0"
          HorizontalAlignment="Right"
          Orientation="Horizontal">
          <Image
            Width="10"
            Height="10"
            Source="pack://application:,,,/RM_Messenger;component/Resources/games.png" />
          <Label
            VerticalAlignment="Center"
            FontSize="10"
            Foreground="White">
            Games
          </Label>
        </StackPanel>
      </Grid>

      <Grid
        Grid.Row="2"
        Margin="10,10,10,0"
        Background="Transparent"
        Cursor="Hand">
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Button
          Grid.Column="0"
          Height="30"
          Background="#3A0936"
          BorderThickness="0"
          Content="Contacts"
          Foreground="White"
          Style="{DynamicResource TopLeftRoundCorner}"
          ToolTip="Contacts" />
        <Button
          Grid.Column="1"
          Height="30"
          Background="#3A0936"
          BorderThickness="0"
          Content="Y! Updates"
          Foreground="White"
          Style="{DynamicResource TopRightRoundCorner}"
          ToolTip="Contacts" />

        <!--<Button
          Visibility="Hidden"
          Grid.Column="0"
          Background="#3A0936"
          BorderThickness="0"
          ToolTip="Contacts">
          <Image Source="pack://application:,,,/RM_Messenger;component/Resources/ContactsButton.png" />
        </Button>-->
        <!--<Button
          Visibility="Hidden"
          Grid.Column="1"
          Background="#3A0936"
          BorderThickness="0"
          ToolTip="Updates">
          <Image Source="pack://application:,,,/RM_Messenger;component/Resources/UpdatesButton.png" />
        </Button>-->
      </Grid>

      <StackPanel
        Grid.Row="3"
        Margin="10,0"
        HorizontalAlignment="Stretch"
        Background="White"
        Orientation="Vertical">
        <DockPanel HorizontalAlignment="Stretch" Background="#3E0C3A">
          <Button
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderThickness="0"
            Command="{Binding AddFriendCommand}"
            Cursor="Hand"
            ToolTip="Add contact">
            <Image Height="20" Source="pack://application:,,,/RM_Messenger;component/Resources/AddFriend.png" />
          </Button>
          <Button
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderThickness="0">
            <Image Height="20" Source="pack://application:,,,/RM_Messenger;component/Resources/GridIcon.png" />
          </Button>
          <TextBox
            Margin="0,1"
            Padding="5,0,5,0"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Panel.ZIndex="0"
            Background="White"
            BorderBrush="LightGray"
            BorderThickness="1"
            FontFamily="Calisto MT"
            FontSize="12"
            FontWeight="Thin"
            Foreground="Black"
            Text="{Binding SearchedUser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.InputBindings>
              <KeyBinding Key="Return" Command="{Binding AddFriendCommand}" />
            </TextBox.InputBindings>
            <TextBox.Style>
              <Style xmlns:sys="clr-namespace:System;assembly=mscorlib" TargetType="TextBox">
                <Style.Resources>

                  <VisualBrush
                    x:Key="GrayHelperTextBrush"
                    AlignmentX="Left"
                    AlignmentY="Center"
                    Stretch="None">
                    <VisualBrush.Visual>
                      <Label
                        Name="SearchLabel"
                        BorderBrush="LightGray"
                        Content="Share a status message..."
                        FontFamily="Calisto MT"
                        FontSize="11"
                        FontWeight="Thin"
                        Foreground="LightGray" />
                    </VisualBrush.Visual>
                  </VisualBrush>

                  <VisualBrush
                    x:Key="BlackHelperTextBrush"
                    AlignmentX="Left"
                    AlignmentY="Center"
                    Stretch="None">
                    <VisualBrush.Visual>
                      <Label
                        Name="SearchBlackLabel"
                        Content="Share a status message..."
                        FontFamily="Calisto MT"
                        FontSize="11"
                        FontWeight="Thin"
                        Foreground="DeepSkyBlue" />
                    </VisualBrush.Visual>
                  </VisualBrush>

                </Style.Resources>
                <Style.Triggers>

                  <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                  </Trigger>

                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Text" Value="{x:Null}" />
                      <Condition Property="IsMouseOver" Value="False" />
                      <Condition Property="IsMouseCaptured" Value="False" />
                      <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                      <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                    </MultiTrigger.Setters>
                  </MultiTrigger>

                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                      <Condition Property="IsMouseOver" Value="False" />
                      <Condition Property="IsMouseCaptured" Value="False" />
                      <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                      <Setter Property="Background" Value="{StaticResource GrayHelperTextBrush}" />
                    </MultiTrigger.Setters>
                  </MultiTrigger>

                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Text" Value="{x:Null}" />
                      <Condition Property="IsMouseOver" Value="True" />
                      <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                      <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                    </MultiTrigger.Setters>
                  </MultiTrigger>

                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Text" Value="{x:Static sys:String.Empty}" />
                      <Condition Property="IsMouseOver" Value="True" />
                      <Condition Property="IsFocused" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                      <Setter Property="Background" Value="{StaticResource BlackHelperTextBrush}" />
                    </MultiTrigger.Setters>
                  </MultiTrigger>

                </Style.Triggers>
              </Style>
            </TextBox.Style>
          </TextBox>
        </DockPanel>

        <ListView
          Name="OuterListView"
          MaxHeight="350"
          BorderThickness="0"
          ItemContainerStyle="{StaticResource RemoveListViewItemHighlight}"
          ItemsSource="{Binding ContactsLists, UpdateSourceTrigger=PropertyChanged}"
          ScrollViewer.CanContentScroll="False"
          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
          ScrollViewer.VerticalScrollBarVisibility="Auto">
          <ListView.ItemTemplate>
            <DataTemplate DataType="{x:Type model:ContactListsModel}">
              <StackPanel Orientation="Vertical">
                <Expander
                  x:Name="AddressBook"
                  helper:ExpanderHelper.BringIntoViewOnExpand="True"
                  ExpandDirection="Right"
                  Expanded="Expander_Expanded"
                  FontWeight="Bold"
                  Foreground="Indigo"
                  IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
                  <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                      <Image
                        Name="img"
                        Width="auto"
                        Height="auto"
                        Source="{Binding ImagePath}" />
                      <TextBlock
                        Margin="7,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding DisplayedName}" />
                    </StackPanel>
                  </Expander.Header>
                  <Expander.Resources>
                    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="Gray" />
                    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="Gray" />
                    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="Gray" />
                    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="Transparent" />
                    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="Gray" />
                    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                              <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition Width="Auto" />
                                  <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                  <Grid.LayoutTransform>
                                    <TransformGroup>
                                      <TransformGroup.Children>
                                        <TransformCollection>
                                          <RotateTransform Angle="-90" />
                                        </TransformCollection>
                                      </TransformGroup.Children>
                                    </TransformGroup>
                                  </Grid.LayoutTransform>
                                  <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Expander.Static.Circle.Fill}"
                                    Stroke="{StaticResource Expander.Static.Circle.Stroke}" />
                                  <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M -2,1.5 L -0.5,4 L 1,1.5 Z"
                                    SnapsToDevicePixels="false"
                                    Stroke="{StaticResource Expander.Static.Arrow.Stroke}"
                                    StrokeThickness="3" />
                                </Grid>
                                <ContentPresenter
                                  Grid.Column="1"
                                  Margin="4,4,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="True" />
                              </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M -0.5,1.5 L -2.5,2.75 L -0.5, 4 Z" />
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Expander.Resources>

                  <Expander.Template>
                    <ControlTemplate TargetType="{x:Type Expander}">
                      <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                        <Grid>
                          <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="*" />
                          </Grid.RowDefinitions>
                          <ToggleButton
                            x:Name="HeaderSite"
                            MinWidth="0"
                            MinHeight="0"
                            Margin="1"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            Cursor="Hand"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpanderRightHeaderStyle}">
                            <ToggleButton.FocusVisualStyle>
                              <Style>
                                <Setter Property="Control.Template">
                                  <Setter.Value>
                                    <ControlTemplate>
                                      <Border>
                                        <Rectangle
                                          Margin="0"
                                          SnapsToDevicePixels="true"
                                          Stroke="Black"
                                          StrokeDashArray="1 2"
                                          StrokeThickness="1" />
                                      </Border>
                                    </ControlTemplate>
                                  </Setter.Value>
                                </Setter>
                              </Style>
                            </ToggleButton.FocusVisualStyle>
                          </ToggleButton>
                          <ContentPresenter
                            x:Name="ExpandSite"
                            Grid.Row="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="false"
                            Visibility="Collapsed" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                          <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Expander.Template>

                  <ListView
                    Name="InnerListView"
                    Margin="20,5,10,20"
                    VerticalAlignment="Top"
                    BorderThickness="0"
                    Cursor="Hand"
                    ItemsSource="{Binding ContactsList}"
                    MouseDoubleClick="InnerListView_MouseDoubleClick"
                    PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
                    ScrollViewer.CanContentScroll="False"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                    SelectedItem="{Binding SelectedContact}">
                    <ListView.ContextMenu>
                      <ContextMenu Cursor="Hand">
                        <MenuItem
                          Command="{Binding DeleteCommand}"
                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                          Header="Delete" />
                      </ContextMenu>
                    </ListView.ContextMenu>

                    <ListView.ItemTemplate>
                      <DataTemplate DataType="{x:Type model:DisplayedContactModel}">
                        <StackPanel Orientation="Horizontal">
                          <Image
                            Width="30"
                            Height="30"
                            Source="{Binding ImagePath}" />

                          <Grid Margin="5,0">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition />
                              <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition />
                              <RowDefinition />
                            </Grid.RowDefinitions>
                            <Image
                              Width="10"
                              Height="10"
                              Margin="0,5,0,0"
                              VerticalAlignment="Top"
                              Source="{Binding OnOffImage}" />

                            <TextBlock
                              Grid.Column="1"
                              Margin="5,0,0,0"
                              VerticalAlignment="Top"
                              FontSize="12"
                              Text="{Binding UserId}" />
                            <TextBlock
                              Grid.Row="1"
                              Grid.Column="1"
                              MaxWidth="125"
                              Margin="5,0,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              FontSize="10"
                              FontWeight="Thin"
                              Text="{Binding Status}"
                              TextWrapping="NoWrap" />

                          </Grid>
                        </StackPanel>
                      </DataTemplate>
                    </ListView.ItemTemplate>
                  </ListView>
                </Expander>
              </StackPanel>
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </StackPanel>

      <StackPanel
        Grid.Row="4"
        MaxWidth="474"
        MaxHeight="170"
        Margin="10"
        Background="White"
        ToolTip="RM! Messenger Ads">
        <Button Background="Transparent">
          <TextBlock>
            <Hyperlink NavigateUri="https://search.yahoo.com/" RequestNavigate="Hyperlink_RequestNavigate">
              <Image gif:ImageBehavior.AnimatedSource="pack://application:,,,/RM_Messenger;component/Resources/yahoo_ads.gif" Cursor="Hand" />
            </Hyperlink>
          </TextBlock>
        </Button>
      </StackPanel>

      <Grid Grid.Row="5" Margin="10,0,10,5">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Image
          Height="25"
          HorizontalAlignment="Left"
          Cursor="Hand"
          Source="pack://application:,,,/RM_Messenger;component/Resources/yahoo_websearch.png"
          ToolTip="Web search" />
        <TextBox
          Grid.Column="1"
          Grid.ColumnSpan="2"
          Width="auto"
          Margin="10,0,0,0"
          Padding="5,0,30,0"
          VerticalAlignment="Stretch"
          VerticalContentAlignment="Center"
          Background="White"
          FontFamily="Calisto MT"
          FontWeight="Thin"
          Foreground="#76246E"
          ToolTip="Search" />
        <Image
          Grid.Column="2"
          Width="23"
          Margin="0,2,0,0"
          HorizontalAlignment="Right"
          VerticalAlignment="Center"
          Cursor="Hand"
          Source="pack://application:,,,/RM_Messenger;component/Resources/search_button.png"
          ToolTip="Search" />

      </Grid>
    </Grid>
  </Grid>
</UserControl>
