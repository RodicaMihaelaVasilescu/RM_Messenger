<UserControl
  x:Class="RM_Messenger.View.ChatTextBoxControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:RM_Messenger.View"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DesignHeight="450"
  d:DesignWidth="800"
  mc:Ignorable="d">

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <!--  Flat Button  -->
      <ControlTemplate x:Key="FlatButtonControlTemplate" TargetType="{x:Type Button}">
        <Border
          x:Name="OuterBorder"
          BorderBrush="Transparent"
          BorderThickness="1"
          CornerRadius="2">
          <Border
            x:Name="InnerBorder"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="2">
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True" />
          </Border>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Yellow" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Green" />
            <Setter TargetName="InnerBorder" Property="Background" Value="Purple" />
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Yellow" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Green" />
            <Setter TargetName="InnerBorder" Property="Background" Value="Purple" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <!--  Flat Toggle Button  -->
      <ControlTemplate x:Key="FlatToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
        <Border
          x:Name="OuterBorder"
          BorderBrush="Transparent"
          BorderThickness="1"
          CornerRadius="2">
          <Border
            x:Name="InnerBorder"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="2">
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True" />
          </Border>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="purple" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="pink" />
            <Setter TargetName="InnerBorder" Property="Background" Value="plum" />
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="purple" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="darkmagenta" />
            <Setter TargetName="InnerBorder" Property="Background" Value="indigo" />
          </Trigger>
          <Trigger Property="IsChecked" Value="True">
            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="purple" />
            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="violet" />
            <Setter TargetName="InnerBorder" Property="Background" Value="#945F8D" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>

      <Style x:Key="ButtonHighlight" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border Background="{TemplateBinding Background}">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="DarkGoldenrod" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid>
    <DockPanel LastChildFill="True">
      <Border
        x:Name="TextFormatPanel"
        BorderBrush="{Binding ElementName=ChatTextBoxControl, Path=ToolbarBorderBrush}"
        BorderThickness="{Binding ElementName=ChatTextBoxControl, Path=ToolbarBorderThickness}"
        DockPanel.Dock="Top"
        SnapsToDevicePixels="True">
        <StackPanel
          Height="24"
          Margin="0,3"
          Background="{Binding ElementName=FsRichTextBoxControl, Path=ToolbarBackground}"
          Orientation="Horizontal">

          <!--  Font family combo box  -->
          <ToggleButton
            x:Name="BoldButton"
            Margin="0,2"
            Background="pink"
            Command="EditingCommands.ToggleBold"
            CommandTarget="{Binding ElementName=TextBox}"
            Template="{StaticResource FlatToggleButtonControlTemplate}"
            ToolTip="Bold">
            <Image
              SnapsToDevicePixels="True"
              Source="pack://application:,,,/RM_Messenger;component/Resources/TextBox/FontBold.png"
              Stretch="None" />
          </ToggleButton>

          <ToggleButton
            x:Name="ItalicButton"
            Margin="0,2"
            Background="pink"
            Command="EditingCommands.ToggleItalic"
            CommandTarget="{Binding ElementName=TextBox}"
            Template="{StaticResource FlatToggleButtonControlTemplate}"
            ToolTip="Italic">
            <Image
              SnapsToDevicePixels="True"
              Source="pack://application:,,,/RM_Messenger;component/Resources/TextBox/FontItalic.png"
              Stretch="None" />
          </ToggleButton>

          <ToggleButton
            x:Name="UnderlineButton"
            Margin="0,2"
            Background="pink"
            Command="EditingCommands.ToggleUnderline"
            CommandTarget="{Binding ElementName=TextBox}"
            Template="{StaticResource FlatToggleButtonControlTemplate}"
            ToolTip="Underline">
            <Image
              SnapsToDevicePixels="True"
              Source="pack://application:,,,/RM_Messenger;component/Resources/TextBox/FontUnderline.png"
              Stretch="None" />
          </ToggleButton>
          <Grid Width="200">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="4*" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ComboBox
              x:Name="FontFamilyCombo"
              Width="150"
              Margin="5,2,2,2"
              HorizontalAlignment="Stretch"
              FontSize="10"
              IsEditable="True"
              SelectionChanged="OnFontFamilyComboSelectionChanged">
              <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <VirtualizingStackPanel Width="250" />
                </ItemsPanelTemplate>
              </ComboBox.ItemsPanel>
              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <TextBlock
                    Height="17"
                    VerticalAlignment="Top"
                    FontFamily="{Binding}"
                    FontSize="12"
                    Text="{Binding}" />
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>

            <!--  Font size combo box  -->
            <ComboBox
              x:Name="FontSizeCombo"
              Grid.Column="1"
              Width="40"
              Height="19"
              Margin="2"
              FontSize="10"
              IsEditable="True"
              SelectionChanged="OnFontSizeComboSelectionChanged" />
          </Grid>
        </StackPanel>
      </Border>

      <Border
        BorderBrush="{Binding ElementName=ChatTextBoxControl, Path=ToolbarBorderBrush}"
        BorderThickness="{Binding ElementName=ChatTextBoxControl, Path=ToolbarBorderThickness}"
        DockPanel.Dock="Top"
        SnapsToDevicePixels="True">
        <StackPanel Margin="5,2" Orientation="Horizontal">
          <Button
            x:Name="EmoticonsButton"
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderThickness="0"
            Cursor="Hand"
            MouseEnter="EmoticonsButton_MouseEnter"
            MouseLeave="EmoticonsButton_MouseLeave"
            ToolTip="Emoticons">
            <Button.Template>
              <ControlTemplate TargetType="{x:Type Button}">
                <StackPanel>
                  <Image
                    x:Name="EmoticonsImage"
                    Width="21"
                    Height="21"
                    Margin="0,-3,0,0"
                    Source="pack://application:,,,/RM_Messenger;component/Resources/Emoticons.png" />
                </StackPanel>
                <ControlTemplate.Triggers>
                  <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="EmoticonsImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/Emoticons_MouseOver.png" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Button.Template>
            <Popup
              x:Name="EmoticonsPopupTooltip"
              MouseLeave="EmoticonsPopupTooltip_MouseLeave"
              Placement="Top"
              PlacementTarget="{Binding ElementName=Emoticons}">
              <StackPanel>
                <local:EmoticonsControl x:Name="EmoticonsControl" />
              </StackPanel>
            </Popup>
          </Button>

          <Button
            x:Name="Audibles"
            Margin="5,0"
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderThickness="0"
            Cursor="Hand"
            ToolTip="Audibles">
            <Button.Template>
              <ControlTemplate TargetType="{x:Type Button}">
                <StackPanel>
                  <Image
                    x:Name="AudiblesImage"
                    Width="18"
                    Height="18"
                    Source="pack://application:,,,/RM_Messenger;component/Resources/Audibles.png" />
                </StackPanel>
                <ControlTemplate.Triggers>
                  <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="AudiblesImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/Audibles_MouseOver.png" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Button.Template>
          </Button>

          <Button
            x:Name="TextFormat"
            Margin="5,0"
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderThickness="0"
            Click="TextFormat_Click"
            Cursor="Hand"
            ToolTip="Format">
            <Button.Template>
              <ControlTemplate TargetType="{x:Type Button}">
                <StackPanel>
                  <Image
                    x:Name="TextFormatImage"
                    Width="18"
                    Height="18"
                    Source="pack://application:,,,/RM_Messenger;component/Resources/TextFormat.png" />
                </StackPanel>
                <ControlTemplate.Triggers>
                  <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="TextFormatImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/TextFormat_MouseOver.png" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Button.Template>
          </Button>

          <Button
            x:Name="BuzzIcon"
            Margin="5,0"
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderThickness="0"
            Cursor="Hand"
            ToolTip="Buzz">
            <Button.Template>
              <ControlTemplate TargetType="{x:Type Button}">
                <StackPanel>
                  <Image
                    x:Name="BuzzImage"
                    Width="18"
                    Height="18"
                    Source="pack://application:,,,/RM_Messenger;component/Resources/BuzzIcon.png" />
                </StackPanel>
                <ControlTemplate.Triggers>
                  <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="BuzzImage" Property="Source" Value="pack://application:,,,/RM_Messenger;component/Resources/BuzzIcon_MouseOver.png" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Button.Template>
            <!--<EventTrigger RoutedEvent="PreviewMouseDown">
            <SoundPlayerAction Source="pack://application:,,,/RM_Messenger;component/Resources/Sounds/buzz.wav" />
          </EventTrigger>-->
          </Button>
        </StackPanel>
      </Border>

      <Grid>
        <RichTextBox
          x:Name="TextBox"
          Padding="0,0,80,0"
          VerticalContentAlignment="Center"
          AcceptsReturn="True"
          AcceptsTab="True"
          IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
          PreviewKeyDown="TextBox_PreviewKeyDown"
          SelectionChanged="OnTextBoxSelectionChanged"
          TextOptions.TextFormattingMode="Ideal"
          TextOptions.TextRenderingMode="Aliased"
          VerticalScrollBarVisibility="Auto" />
        <Button
          x:Name="SendButton"
          Width="80"
          Height="23"
          Margin="3"
          HorizontalAlignment="Right"
          VerticalAlignment="Center"
          BorderBrush="Indigo"
          BorderThickness="2"
          Command="{Binding SendCommand}"
          Content="Send"
          Cursor="Hand"
          Foreground="White"
          Style="{StaticResource ButtonHighlight}">
          <Button.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <GradientStop x:Name="GradientColor2" Offset="0.8" />
              <GradientStop x:Name="GradientColor3" Offset="0.4" />
              <GradientStop x:Name="GradientColor1" Offset="0" />
            </LinearGradientBrush>
          </Button.Background>
        </Button>

        <materialDesign:HintAssist.Hint>
          <TextBlock Foreground="Gray">Write your message here...</TextBlock>
        </materialDesign:HintAssist.Hint>

      </Grid>
    </DockPanel>
  </Grid>
</UserControl>
